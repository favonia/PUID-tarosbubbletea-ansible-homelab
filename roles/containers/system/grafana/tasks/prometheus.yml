---
- name: "[prometheus] docker container"
  community.docker.docker_container:
    name: "prometheus"
    hostname: "prometheus"
    image: prom/prometheus:latest
    pull: true
    volumes:
      - "prometheus_data:/etc/prometheus"
    networks:
      - name: internal
      - name: bridge
    # extra_host:
    #   - "host.docker.internal:host-gateway"
    ports:
      - "9090:9090"
    # labels:
    #   traefik.enable: "false"
    #   traefik.http.routers.api.rule: Host(`{{url}}`)
    #   traefik.http.routers.api.service: "api@internal"
    #   traefik.http.routers.api.entrypoints: web
    # traefik.http.routers.api.middlewares: "authentik@docker"
    restart_policy: unless-stopped
    state: started
- name: copy prometheus config
  become: true
  template:
    src: prometheus_config.j2
    dest: /var/lib/docker/volumes/prometheus_data/_data/prometheus.yml

- name: "[cadvisor]"
  community.docker.docker_container:
    name: "prometheus-cadvisor"
    hostname: "prometheus-cadvisor"
    image: gcr.io/cadvisor/cadvisor:latest
    pull: true
    networks:
      - name: internal
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    ports:
      - "8080:8080"
    restart_policy: unless-stopped
    state: started
